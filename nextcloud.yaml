- name: Install Nextcloud
  hosts: next_cloud_server
  tasks:
    - name: Print Nextcloud Server IP
      ansible.builtin.debug:
        msg: "Nextcloud Server IP: {{ nextcloud_server_ip }}"

    - name: Print Ansible User
      ansible.builtin.debug:
        msg: "Ansible User: {{ ansible_user }}"

    - name: Print Admin User
      ansible.builtin.debug:
        msg: "Admin User: {{ admin_user }}"

    - name: Print Admin Password
      ansible.builtin.debug:
          msg: "Admin Password: {{ admin_password }}"

    - name: update all packages
      apt:
        name: "*"
        state: latest

    - name: install apache
      apt:
        name: apache2
        state: present

    - name: install php and modules
      apt:
        pkg:
          - php
          - php-curl
          - php-dompdf
          - php-gd
          - php-mbstring
          - php-zip
          - php-intl
          - php-ldap
          - php-imap
          - php-bcmath
          - php-gmp
          - php-imagick
          - php-phar
          - php-mysql
        state: present

    - name: install ffmpeg
      apt:
        name: ffmpeg
        state: present

    - name: install mariaDB
      apt:
        name: mariadb-server
        state: present

### DB ###

    - name: get MariaDB Script
      ansible.builtin.template:
        src: prep_MariaDB.sh.j2
        dest: /var/tmp/prep_MariaDB.sh

    - name: enable MariaDB Script
      ansible.builtin.command:
        chmod +x /var/tmp/prep_MariaDB.sh

    - name: Prepare MariaDB
      ansible.builtin.command:
        bash /var/tmp/prep_MariaDB.sh

### DB ###

### Webserver / Apache ###

    - name: configure Apache with nextcloud config
      ansible.builtin.template:
        src: nextcloud.conf.j2
        dest: /etc/apache2/sites-available/nextcloud.conf

    - name: get apache script
      ansible.builtin.template:
        src: prep_apache.sh.j2
        dest: /var/tmp/prep_apache.sh

    - name: enable apache script
      ansible.builtin.command:
            chmod +x /var/tmp/prep_apache.sh

    - name: Prepare Apache
      ansible.builtin.command:
        bash /var/tmp/prep_apache.sh

    - name: restart apache2
      systemd:
        name: apache2
        state: restarted

### Webserver / Apache ###

### Nextcloud ###

    - name: Check if Nextcloud is installed
      ansible.builtin.command: ls /var/www/nextcloud/occ
      register: nextcloud_check
      ignore_errors: yes

    - name: Print Nextcloud installation status
      ansible.builtin.debug:
        msg: "Nextcloud is installed"
      when: nextcloud_check.rc == 0

    - name: Print Nextcloud not installed status
      ansible.builtin.debug:
        msg: "Nextcloud is not installed"
      when: nextcloud_check.rc != 0

    - name: get latest nextcloud version
      ansible.builtin.command: curl -o /tmp/nextcloud.tar.bz2 https://download.nextcloud.com/server/releases/latest.tar.bz2
      when: nextcloud_check.rc != 0

    - name: extract nextcloudnextcloud
      ansible.builtin.command: tar -xjvf /tmp/nextcloud.tar.bz2
      when: nextcloud_check.rc != 0

    - name: copy nextcloud to /var/www
      ansible.builtin.command: cp -r nextcloud /var/www
      when: nextcloud_check.rc != 0

    - name: change owner of nextcloud
      ansible.builtin.command: chown -R www-data:www-data /var/www/nextcloud
      when: nextcloud_check.rc != 0

    - name: install nextcloud
      ansible.builtin.command: sudo -u www-data php /var/www/nextcloud/occ maintenance:install --database "mysql" --database-name "nextcloud" --database-user "nextcloud" --database-pass "password" --admin-user "{{ admin_user }}" --admin-pass "{{ admin_password }}"
      when: nextcloud_check.rc != 0

    - name: add Server IP to trusted Domains
      ansible.builtin.command:
        sudo -u www-data php /var/www/nextcloud/occ config:system:set trusted_domains 2 --value='{{ nextcloud_server_ip }}'

### Nextcloud ###